route science select handle_science

====== handle_science =====

jump station_science if has_roles(SCIENCE_SELECTED_ID, "tsn, Station")
jump friendly_science if has_roles(SCIENCE_SELECTED_ID, "tsn, friendly")
jump raider_science if has_role(SCIENCE_SELECTED_ID, "raider")

->END

========= station_science =======

await scan fog 0:
    + "scan":
        scan results "This is a friendly station."
    + "bio":
        scan results "The crew is mostly human, plus a few aliens, pets, and lab animals."
    + "intl":
        scan results "Built ten years ago, this station was in excellent condition before the battle."
end_await
->END

========= friendly_science =======

await scan:
    + "scan":
        scan results "This is a friendly ship."
    + "bio":
        scan results "The crew is mostly human."
    + "intl":
        scan results "The ship is ready for battle."
end_await
->END

====== raider_science  ===========
taunt_trait=get_inventory_value(SCIENCE_SELECTED_ID, "taunt_trait")
taunt_intel = "The captain cannot be taunted."
if taunt_trait is not None and taunt_data is not None:
    bio_intel = "The bio scan has failed."
    races = ["kralien", "arvonian", "torgoth", "skaraan", "ximni"]
    race = None
    for test in races:
        if has_role(SCIENCE_SELECTED_ID, test):
            race = test
            bio_intel = "The crew is made up of {race}."
            break
        end_if
    next test
    if race is not None:
        intel_list = taunt_data[race]
        taunt_intel = intel_list[taunt_trait]['science']
    end_if
end_if

await scan:
    + "scan":
        scan results "Enemy vessel. Exercise caution."
    + "bio":
        scan results "{bio_intel}"
    + "intl":
        scan results "{taunt_intel}"
end_await
->END

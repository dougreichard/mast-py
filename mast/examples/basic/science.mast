route_science_select("handle_science")

====== handle_science =====

jump station_science if has_roles(SCIENCE_SELECTED_ID, "tsn, Station")
jump friendly_science if has_roles(SCIENCE_SELECTED_ID, "tsn, friendly")
jump raider_science if has_role(SCIENCE_SELECTED_ID, "raider")
jump upgrade_science if has_role(SCIENCE_SELECTED_ID, "upgrade")
jump wreck_science if has_role(SCIENCE_SELECTED_ID, "wreck")


->END

========= station_science =======

await scan():
    + "scan":
        scan_results("This is a friendly station.")
    + "bio":
        scan_results("The crew is mostly human, plus a few aliens, pets, and lab animals.")
    + "intl":
        scan_results("Built ten years ago, this station was in excellent condition before the battle.")
end_await
->END

========= friendly_science =======

await scan():
    + "scan":
        scan_results("This is a friendly ship.")
    + "bio":
        scan_results("The crew is mostly human.")
    + "intl":
        scan_results("The ship is ready for battle.")
end_await
->END

====== raider_science  ===========
taunt_trait=get_inventory_value(SCIENCE_SELECTED_ID, "taunt_trait")
intel_list = get_inventory_value(SCIENCE_SELECTED_ID, "taunt_data")

taunt_intel = "The captain cannot be taunted."
bio_intel = "The bio scan has failed."
if taunt_trait is not None and taunt_data is not None:
    
    race = get_race(SCIENCE_SELECTED_ID)
    if race is not None:
        taunt_intel = intel_list[taunt_trait]['science']
        bio_intel = "A bunch of {race} creatures."
    end_if
end_if

await scan():
    + "scan":
        scan_results("Enemy vessel. Exercise caution.")
    + "bio":
        scan_results("{bio_intel}")
    + "intl":
        scan_results("{taunt_intel}")
end_await
->END


===== upgrade_science ======

if has_roles(SCIENCE_SELECTED_ID, "upgrade, carapaction_coil"):
    upg_desc = "Carapaction Coil. 5 min 300% shield recharge boost."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, infusion_pcoils"):
    upg_desc = "Infusion P-Coils. 5 Minute 300% Impulse and Maneuver Speed Boost."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, tauron_focuser"):
    upg_desc = "Tauron Focuser. 5 Minute 100% Beam and Reload Speed Boost."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, secret_codecase"):
    upg_desc = "Secret Codecase. Force one enemy ship to auto-surrender"
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, hidens_powercell"):
    upg_desc = "HiDens Powercell. Increase energy by 500-600."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, vigoranium_nodule"):
    upg_desc = "Vigoranium Nodule. Restore Damage Control Teams."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, cetrocite_crystal"):
    upg_desc = "Cetrocite Crystal. 5 Minute 100% Faster Heat Reduction."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, lateral_array"):
    upg_desc = "Lateral Array. 5 Minute Target Scan Triple Speed."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, haplix_overcharger"):
    upg_desc = "Haplix Overcharger. +300 to shields but may damage shield generators."
end_if


await scan():
    + "scan":
        scan_results("{upg_desc}")
end_await
->END

===== wreck_science =====
wr_desc = "Gutted and battle-scarred wreckage, the mangled remains of a fierce battle."
bio_intel = "No signs of life detected."
mat_intel = "Material scan: no salvage value. Scrap metal and traces of heavier elements, but nothing worth salvaging."

await scan():
    + "scan":
        scan_results("{wr_desc}")
    + "bio":
        scan_results("{bio_intel}")
    + "mat":
        scan_results("{mat_intel}")
end_await
->END

shared allow_debug = True

if allow_debug==is_dev_build():
    gui_add_console_tab(SHARED, "helm", "debug", "debug_screen")
    gui_add_console_tab(SHARED, "comms", "debug", "debug_screen")
    gui_add_console_tab(SHARED, "engineering", "debug", "debug_screen")
    gui_add_console_tab(SHARED, "science", "debug", "debug_screen")
    gui_add_console_tab(SHARED, "weapons", "debug", "debug_screen")
    gui_add_console_tab(SHARED, "debug", "mast", "mast_debug_screen")
    gui_add_console_tab(SHARED, "debug", "debug", None)
    gui_add_console_tab(SHARED, "debug", "__back_tab__", "console_selected")
    gui_add_console_tab(SHARED, "mast", "mast", None)    
    gui_add_console_tab(SHARED, "mast", "debug", "debug_screen")
    gui_add_console_tab(SHARED, "mast", "__back_tab__", "console_selected")
end_if




===== debug_screen ======

gui_section( style="area: 10,10,90,90;")

"""
Under construction
"""

gui_section(style="area:10,15,35,100;row-height:35px;")
gui_row()
on gui_message(gui_button("Test Anomalies")):
    jump spawn_test_anom
end_on
gui_row()
on gui_message(gui_button("Test Wreck")):
    jump spawn_test_wreck
end_on
gui_row()
on gui_message(gui_button("Test Enemy")):
    jump spawn_test_enemy
end_on



gui_activate_console("debug")

await gui()




===== spawn_test_anom === 
# For testing anomalies, load some candy up front
_ship_id = get_inventory_value(client_id, "assigned_ship")
jump debug_screen if _ship_id is None

eo = to_engine_object(_ship_id)
_pos_eo = eo.pos
_forward = eo.forward_vector()
#_vpos = Vec3(_pos_eo.x, _pos_eo.y, _pos_eo.z)
#_vforward = Vec3(_forward.x, _forward.y, _forward.z)
_pos = _pos_eo + (_forward * 300)


pickup_spawn(_pos.x, _pos.y, _pos.z, "carapaction_coil")
pickup_spawn(200+_pos.x, _pos.y, _pos.z+250, "infusion_pcoils")
pickup_spawn(275+_pos.x, _pos.y, _pos.z+250, "tauron_focuser")
pickup_spawn(125+_pos.x, _pos.y, _pos.z+325, "secret_codecase")
pickup_spawn(200+_pos.x, _pos.y, _pos.z+325, "hidens_powercell")
pickup_spawn(275+_pos.x, _pos.y, _pos.z+325, "vigoranium_nodule")
pickup_spawn(125+_pos.x, _pos.y, _pos.z+400, "cetrocite_crystal")
pickup_spawn(200+_pos.x, _pos.y, _pos.z+400, "lateral_array")
pickup_spawn(275+_pos.x, _pos.y, _pos.z+400, "haplix_overcharger")

jump debug_screen

===== spawn_test_wreck ===== 
# For testing wrecks, load one up front
_ship_id = get_inventory_value(client_id, "assigned_ship")
jump debug_screen if _ship_id is None

eo = to_engine_object(_ship_id)
_pos_eo = eo.pos
_forward = eo.forward_vector()
_pos = _pos_eo + (_forward * 300)

wr = terrain_spawn(_pos.x, _pos.y, _pos.z+300, "Wreck", "wreck", "wreck", "behav_asteroid")
temp_yaw = random.uniform(0.001, 0.003)
temp_pitch = random.uniform(0.002, 0.004)
wr.engine_object.steer_yaw = temp_yaw
wr.engine_object.steer_pitch = temp_pitch
wr.blob.set("radar_color_override", "#f0c")
set_inventory_value(wr.id, "hp", 150)
set_inventory_value(wr.id, "hull_side", "skaraan")
set_inventory_value(wr.id, "hull_type", "cruiser")

jump debug_screen


===== spawn_test_enemy ===== 
# For testing wrecks, load one up front
_ship_id = get_inventory_value(client_id, "assigned_ship")
jump debug_screen if _ship_id is None

eo = to_engine_object(_ship_id)
_pos_eo = eo.pos
_forward = eo.forward_vector()
_pos = _pos_eo + (_forward * 300)

spawn_data = npc_spawn(_pos.x, _pos.y, _pos.z+400, "Clay Pigeon", "ximni, raider", "xim_light_cruiser", "behav_npcship")
raider = spawn_data.py_object
set_face(raider.id, random_face("ximni"))
r_blob = to_blob(raider.id)
set_data_set_value(r_blob, "shield_val", 0, 0)
set_data_set_value(r_blob, "shield_val", 0, 1)

jump debug_screen


===== mast_debug_screen ======

gui_section(style="area: 10,10,90,90;")

"""
Under construction
"""

gui_activate_console("mast")

await gui()
